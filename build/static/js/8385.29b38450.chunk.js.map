{"version":3,"file":"static/js/8385.29b38450.chunk.js","mappings":"2NAmDA,UAhCsB,WACpB,IAAMA,GAAUC,EAAAA,EAAAA,KAEhBC,GAAuBC,EAAAA,EAAAA,MAAhBC,GAAiCC,EAAAA,EAAAA,GAAAH,EAAA,GAArB,GACbI,GAAOC,EAAAA,EAAAA,KAAe,SAAAC,GAAK,OAAIA,EAAMC,UAAUC,YAAY,IAC3DC,GAASJ,EAAAA,EAAAA,KAAe,SAAAC,GAAK,OAAIA,EAAMI,KAAKD,MAAM,IAClDE,EAAST,EAAaU,IAAI,UAAYV,EAAaU,IAAI,UAAYH,EACnEI,EAASC,SAASH,GACxBI,GAA0BC,EAAAA,EAAAA,UAAS,IAAgBC,GAAAd,EAAAA,EAAAA,GAAAY,EAAA,GAA5CG,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GAEhBG,EAAU,CACd,CAAEhB,KAAMiB,OAAOjB,GAAOkB,MAAO,KAAMC,OAAQ,GAAIC,KAAM,GAAIJ,QAAS,oBAClE,CAAEhB,KAAMiB,OAAOjB,GAAOkB,MAAO,KAAMC,OAAQ,GAAIC,KAAM,UACrD,CAAEpB,KAAMiB,OAAOjB,GAAOkB,MAAO,KAAMC,OAAQ,GAAIC,KAAM,WAiBvD,OAfAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAsBN,EAAQP,IAASc,MACrC,SAAAC,GACE,IAAMV,EAAQU,EAAIC,KAAKX,MAAMY,KAAI,SAACpB,GAEhC,IAAMqB,GAAWC,EAAAA,EAAAA,IAAStB,EAAKqB,UAC/B,OAAOE,OAAOC,OAAO,CAAC,EAAGxB,EAAM,CAAEqB,SAAAA,GACnC,IACAZ,EAASD,EACX,IACA,SAAAiB,GACErC,EAAQsC,MAAMD,EAAIrC,QACpB,GAEJ,GAAG,CAACa,EAAQP,KACLiC,EAAAA,EAAAA,KAACC,EAAAA,EAAe,CAACpB,MAAOA,GACjC,C","sources":["pages/MainPage/StarBlog/FilteredBlogs/index.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\n// comp\nimport ShowBlogTagList from '@/components/Universal/ShowBlogTagList';\n\n// api\nimport { getSelfBlogsOfCertain } from '@/api/blog';\n\n// context\nimport { useGlobalMessage } from '@/components/ContextProvider/MessageProvider';\n\n// util\nimport { filterLT } from '@/utils';\n\n// interface\nimport { BlogObj } from '@/interface';\nimport { useAppSelector } from '@/redux';\n\nconst FilteredBlogs = () => {\n  const message = useGlobalMessage();\n  // params参数\n  const [searchParams] = useSearchParams();\n  const page = useAppSelector(state => state.universal.starBlogPage);\n  const chosen = useAppSelector(state => state.blog.chosen);\n  const filter = searchParams.get('filter') ? searchParams.get('filter') : chosen;\n  const option = parseInt(filter as string);\n  const [blogs, setBlogs] = useState([] as BlogObj[]);\n  // 请求参数\n  const options = [\n    { page: String(page), limit: '10', fields: '', sort: '', options: 'isCollected=true' },\n    { page: String(page), limit: '10', fields: '', sort: '-likes' },\n    { page: String(page), limit: '10', fields: '', sort: '-views' },\n  ];\n  useEffect(() => {\n    getSelfBlogsOfCertain(options[option]).then(\n      res => {\n        const blogs = res.data.blogs.map((blog: BlogObj) => {\n          // 处理后端过滤的<\n          const contents = filterLT(blog.contents as string);\n          return Object.assign({}, blog, { contents });\n        });\n        setBlogs(blogs);\n      },\n      err => {\n        message.error(err.message);\n      }\n    );\n  }, [filter, page]);\n  return <ShowBlogTagList blogs={blogs}></ShowBlogTagList>;\n};\nexport default FilteredBlogs;\n"],"names":["message","useGlobalMessage","_useSearchParams","useSearchParams","searchParams","_slicedToArray","page","useAppSelector","state","universal","starBlogPage","chosen","blog","filter","get","option","parseInt","_useState","useState","_useState2","blogs","setBlogs","options","String","limit","fields","sort","useEffect","getSelfBlogsOfCertain","then","res","data","map","contents","filterLT","Object","assign","err","error","_jsx","ShowBlogTagList"],"sourceRoot":""}