{"version":3,"file":"static/js/4248.df0b158b.chunk.js","mappings":"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","sources":["components/ReactMarkdownRender/index.tsx","webpack://front-end/./src/pages/MainPage/BackStage/BlogManage/index.module.scss?5d6d","webpack://front-end/./src/components/MarkdownEditor/index.module.scss?f01a","components/MarkdownEditor/index.tsx","pages/MainPage/BackStage/BlogManage/index.tsx"],"sourcesContent":["import React, { useEffect, useMemo, useRef, useState } from 'react';\nimport { nanoid } from 'nanoid';\n\n// markdown\nimport ReactMarkdown from 'react-markdown';\nimport remarkMath from 'remark-math';\nimport rehypeKatex from 'rehype-katex';\nimport 'katex/dist/katex.min.css';\nimport rehypeRaw from 'rehype-raw';\nimport remarkGfm from 'remark-gfm';\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport { vscDarkPlus } from 'react-syntax-highlighter/dist/cjs/styles/prism';\n// import { oneLight } from 'react-syntax-highlighter/dist/esm/styles/prism';\n// import { darcula } from 'react-syntax-highlighter/dist/cjs/styles/prism';\n\n// css\nimport 'github-markdown-css';\nimport './index.scss';\n\n// context\nimport { useGlobalMessage } from '@/components/ContextProvider/MessageProvider';\n\n// redux\nimport { useAppSelector } from '@/redux';\n\ninterface ReactMarkdownWrapperProps {\n  children: string;\n}\n\n// code渲染器\nconst code = ({ node, inline, className, children, ...props }: any) => {\n  const themeMode = useAppSelector(state => state.universal.themeMode);\n  const match = useMemo(() => /language-(\\w+)/.exec(className || ''), [className]);\n  const message = useGlobalMessage();\n  const [unique] = useState(nanoid());\n  const ref = useRef<HTMLDivElement>(null);\n  // copy点击事件\n  const handleClick = () => {\n    // 复制到粘贴板\n    const clipboardObj = navigator.clipboard;\n    const value = String(children).replace(/\\n$/, '');\n    clipboardObj.writeText(value).then(\n      () => {\n        message.success('已粘贴到粘贴板');\n      },\n      () => {\n        message.error('粘贴失败');\n      }\n    );\n  };\n\n  useEffect(() => {\n    // 当前的wrapper\n    const div = document.getElementsByClassName(unique)[0];\n    const parent = div ? (div.parentElement as HTMLElement) : undefined;\n    const child = div ? (div.firstElementChild as HTMLElement) : undefined;\n    if (parent && child) {\n      parent.style.position = 'relative';\n      child.style.color = 'rgb(150, 150, 150)';\n    }\n  }, []);\n\n  return !inline && match ? (\n    <>\n      <div className={`syntax-highlighter-func-bar-wrapper`} ref={ref}>\n        <div\n          className={`iconfont syntax-highlighter-copy-btn-${themeMode === 'dark' ? 'dark' : 'light'}`}\n          onClick={handleClick}\n        >\n          &#xe706;\n        </div>\n        <div className={`syntax-highlighter-code-language-${themeMode === 'dark' ? 'dark' : 'light'}`}>{match[1]}</div>\n      </div>\n      <SyntaxHighlighter\n        {...props}\n        showLineNumbers\n        style={vscDarkPlus}\n        language={match[1]}\n        className={`syntax-highlighter-wrapper ${unique}`}\n      >\n        {String(children).replace(/\\n$/, '')}\n      </SyntaxHighlighter>\n    </>\n  ) : (\n    <code {...props} className={className}>\n      {children}\n    </code>\n  );\n};\n\nconst ReactMarkdownRender: React.FC<ReactMarkdownWrapperProps> = ({ children }) => {\n  const themeMode = useAppSelector(state => state.universal.themeMode);\n  return (\n    <ReactMarkdown\n      className={`markdown-body ${themeMode === 'dark' ? 'markdown-render-dark' : 'markdown-render-light'}`}\n      remarkPlugins={[remarkMath, remarkGfm]}\n      rehypePlugins={[rehypeKatex, rehypeRaw]}\n      components={{ code }}\n    >\n      {children}\n    </ReactMarkdown>\n  );\n};\nexport default ReactMarkdownRender;\n","// extracted by mini-css-extract-plugin\nexport default {\"dark\":\"BlogManage_dark__r0Z2H\",\"dark-2\":\"BlogManage_dark-2__d4Fxg\",\"dark-3\":\"BlogManage_dark-3__opjAu\",\"dark-3-onforce\":\"BlogManage_dark-3-onforce__jwiTG\",\"light\":\"BlogManage_light__zWvEL\",\"light-1\":\"BlogManage_light-1__lGUJU\",\"dark-font\":\"BlogManage_dark-font__6DvgM\",\"dark-back-2-onforce-no-trans\":\"BlogManage_dark-back-2-onforce-no-trans__YR2KY\",\"hoverDark\":\"BlogManage_hoverDark__4eOv2\",\"hoverLight\":\"BlogManage_hoverLight__WSA2O\",\"light-font\":\"BlogManage_light-font__p6wz4\",\"mark\":\"BlogManage_mark__PhWii\",\"transBase\":\"BlogManage_transBase__YhZjJ\",\"transHide\":\"BlogManage_transHide__JT5Vq\",\"showAnime\":\"BlogManage_showAnime__B+87i\",\"hideAnime\":\"BlogManage_hideAnime__zIyDx\",\"show-anime-delay-1s\":\"BlogManage_show-anime-delay-1s__alWfn\",\"show-anime-no-delay\":\"BlogManage_show-anime-no-delay__5GH0n\",\"wrapper\":\"BlogManage_wrapper__rdXfi\",\"sider\":\"BlogManage_sider__j2Coh\",\"content\":\"BlogManage_content__+M5+r\",\"editState\":\"BlogManage_editState__bwNQU\",\"inputBox\":\"BlogManage_inputBox__l9Ix-\",\"editor\":\"BlogManage_editor__FsJKt\",\"submitBtn\":\"BlogManage_submitBtn__7rKzL\",\"anime\":\"BlogManage_anime__S9toz\"};","// extracted by mini-css-extract-plugin\nexport default {\"dark\":\"MarkdownEditor_dark__qEe8K\",\"dark-2\":\"MarkdownEditor_dark-2__YpWmO\",\"dark-3\":\"MarkdownEditor_dark-3__dkK1-\",\"dark-3-onforce\":\"MarkdownEditor_dark-3-onforce__ve7nW\",\"light\":\"MarkdownEditor_light__J8Tfd\",\"light-1\":\"MarkdownEditor_light-1__Md3DW\",\"dark-font\":\"MarkdownEditor_dark-font__Iqn+N\",\"dark-back-2-onforce-no-trans\":\"MarkdownEditor_dark-back-2-onforce-no-trans__AA5St\",\"hoverDark\":\"MarkdownEditor_hoverDark__N2BsX\",\"hoverLight\":\"MarkdownEditor_hoverLight__OfKCI\",\"light-font\":\"MarkdownEditor_light-font__3PhEP\",\"mark\":\"MarkdownEditor_mark__x3aoD\",\"transBase\":\"MarkdownEditor_transBase__nA5hU\",\"transHide\":\"MarkdownEditor_transHide__2L4SN\",\"showAnime\":\"MarkdownEditor_showAnime__lCP0t\",\"hideAnime\":\"MarkdownEditor_hideAnime__vEYgC\",\"show-anime-delay-1s\":\"MarkdownEditor_show-anime-delay-1s__c2V9A\",\"show-anime-no-delay\":\"MarkdownEditor_show-anime-no-delay__buNpY\",\"wrapper\":\"MarkdownEditor_wrapper__fH2og\",\"editor\":\"MarkdownEditor_editor__dNZ27\",\"preview\":\"MarkdownEditor_preview__Iaqx9\",\"previewTips\":\"MarkdownEditor_previewTips__skJtm\",\"textDark\":\"MarkdownEditor_textDark__dWY-3\",\"textLight\":\"MarkdownEditor_textLight__ccB7c\",\"toolbarDark\":\"MarkdownEditor_toolbarDark__kq2ED\",\"toolbarLight\":\"MarkdownEditor_toolbarLight__omd4i\"};","import React, { useEffect } from 'react';\nimport MDEditor from '@uiw/react-md-editor';\n\n// css\nimport './editor.scss';\nimport style from './index.module.scss';\n\n// redux\nimport { useAppDispatch, useAppSelector } from '@/redux';\nimport { setContent } from '@/redux/slices/blog';\n\nconst MarkdownEditor = () => {\n  const { content } = useAppSelector(state => state.blog.writeContent);\n  const themeMode = useAppSelector(state => state.universal.themeMode);\n  const dispatch = useAppDispatch();\n\n  useEffect(() => {\n    const textarea = document.getElementsByClassName('w-md-editor-text-input')[0];\n    const toolbar = document.getElementsByClassName('w-md-editor-toolbar')[0];\n    if (themeMode === 'dark') {\n      textarea.classList.add(style.textDark);\n      textarea.classList.remove(style.textLight);\n      toolbar.classList.add(style.toolbarDark);\n      toolbar.classList.remove(style.toolbarLight);\n    } else {\n      textarea.classList.add(style.textLight);\n      textarea.classList.remove(style.textDark);\n      toolbar.classList.add(style.toolbarLight);\n      toolbar.classList.remove(style.toolbarDark);\n    }\n  }, [themeMode]);\n  return (\n    <div className={`${style.wrapper} clearfix`}>\n      <div className={style.editor}>\n        <MDEditor\n          className={themeMode === 'dark' ? style.dark : style.light}\n          value={content}\n          preview=\"edit\"\n          onChange={value => {\n            dispatch(setContent(value));\n          }}\n        />\n      </div>\n    </div>\n  );\n};\nexport default MarkdownEditor;\n","import React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router';\n\n// antd\nimport { Input, TreeSelect, Button, Drawer, Dropdown, Space } from 'antd';\nimport { DownOutlined } from '@ant-design/icons';\nimport type { MenuProps } from 'antd';\n\n// css\nimport style from './index.module.scss';\n\n// comp\nimport SideMenu from '@/components/SideMenu';\nimport MarkdownEditor from '@/components/MarkdownEditor';\nimport ReactMarkdownRender from '@/components/ReactMarkdownRender';\n\n// utils\nimport { filterLT, getSideMenuItem, getTreeSelectList, hasBlog } from '@/utils';\n\n// redux\nimport { useAppDispatch, useAppSelector } from '@/redux';\nimport { addBlogMenu, setSelectedId, editBlogMenu } from '@/redux/slices/blogMenu';\nimport { setSelectKey } from '@/redux/slices/backstage';\nimport {\n  setMenuId,\n  setTitle,\n  setMenuTitle,\n  initWriteContent,\n  setIsEdit,\n  setAllContent,\n  setCurEditId,\n} from '@/redux/slices/blog';\n\n// context\nimport { useIcons } from '@/components/ContextProvider/IconStore';\nimport { useGlobalMessage } from '@/components/ContextProvider/MessageProvider';\nimport { useGlobalModal } from '@/components/ContextProvider/ModalProvider';\nimport { useViewport } from '@/components/ContextProvider/ViewportProvider';\n\n// api\nimport { addBlogAjax, getCurBlog, updateBlogAjax } from '@/api/blog';\n\n// interface\nimport { SideMenuItem } from '@/interface';\n\nconst BlogManage = () => {\n  const menus = useAppSelector(state => state.blogMenu.menuList);\n  const modal = useGlobalModal();\n  const message = useGlobalMessage();\n  const dispatch = useAppDispatch();\n  const { width } = useViewport();\n  // text info\n  const { title, menuId, content, menuTitle } = useAppSelector(state => state.blog.writeContent);\n  const isEdit = useAppSelector(state => state.blog.isEdit);\n  const curEditId = useAppSelector(state => state.blog.curEditId);\n  const selectedId = useAppSelector(state => state.blogMenu.selectedId);\n  const icons = useIcons();\n  const antdMenus = getTreeSelectList(menus, icons, true);\n  // 提交按钮loading状态\n  const [isLoading, setIsLoading] = useState(false);\n  // 当前正在编辑的id，如果不用的话，编辑中选择其他博客selectedId会改变，修改的博客就变成了其他博客了\n  // 预览打开state\n  const [open, setOpen] = useState(false);\n\n  useEffect(() => {\n    dispatch(setSelectKey('blog'));\n  }, []);\n\n  // 编辑状态菜单\n  const items: MenuProps['items'] = [\n    {\n      key: '1',\n      label: <div style={{ fontSize: '1vw' }}>Update</div>,\n      onClick: () => {\n        if (!hasBlog(menus) && !selectedId) {\n          message.error('当前没有博客可供编辑！');\n          return;\n        }\n        modal.confirm({\n          title: '提示',\n          content: '编辑当前博客会覆盖正在编辑的内容，确定要这么做吗？',\n          onOk: () => {\n            dispatch(setCurEditId(selectedId));\n            getCurBlog(selectedId).then(\n              response => {\n                const blog = response.data.blog;\n                const { belongingMenu, contents, title } = blog;\n                const menu = getSideMenuItem(menus, belongingMenu) as SideMenuItem;\n                dispatch(\n                  setAllContent({\n                    title,\n                    menuId: menu.id,\n                    menuTitle: menu.title,\n                    content: filterLT(contents),\n                  })\n                );\n                dispatch(setIsEdit(true));\n              },\n              err => {\n                message.error(err.message);\n              }\n            );\n          },\n        });\n      },\n    },\n    {\n      key: '2',\n      label: <div style={{ fontSize: '1vw' }}>Add</div>,\n      onClick: () => {\n        modal.confirm({\n          title: '提示',\n          content: '添加博客会情况当前编辑状态，确定要这么做吗？',\n          onOk: () => {\n            dispatch(initWriteContent());\n            dispatch(setIsEdit(false));\n          },\n        });\n      },\n    },\n  ];\n  const handleSubmit = async () => {\n    setIsLoading(true);\n    await addBlogAjax(\n      {\n        title,\n        belongingMenu: menuId,\n        contents: content,\n      },\n      async data => {\n        await message.loadingSuccessAsync('提交中...', '提交成功！');\n        const blog = data.newBlog;\n        // 如果当前没有blog，则创建完毕后默认选中该blog\n        if (!hasBlog(menus)) {\n          dispatch(setSelectedId(blog.id));\n        }\n        // 更新主页博客信息\n        dispatch(addBlogMenu(blog as SideMenuItem));\n        dispatch(initWriteContent());\n        setIsLoading(false);\n      },\n      content => {\n        message.error(content);\n        setIsLoading(false);\n      }\n    );\n  };\n\n  const handleUpdate = async () => {\n    setIsLoading(true);\n    await updateBlogAjax(\n      {\n        blogId: curEditId,\n        data: {\n          title,\n          belongingMenu: menuId,\n          contents: content,\n          updateAt: Date.now(),\n        },\n      },\n      async () => {\n        await message.loadingSuccessAsync('更新中...', '更新成功！');\n        dispatch(initWriteContent());\n        dispatch(\n          editBlogMenu({\n            id: curEditId,\n            title,\n            belongingMenu: menuId,\n          })\n        );\n        dispatch(setIsEdit(false));\n        setIsLoading(false);\n      },\n      content => {\n        message.error(content);\n        setIsLoading(false);\n      }\n    );\n  };\n\n  return (\n    <div className={`${style.wrapper} clearfix`}>\n      <div id=\"blog-manage-sider-wrapper\" className={style.sider}>\n        <SideMenu page=\"manage\"></SideMenu>\n      </div>\n      <div id=\"blog-manage-content-wrapper\" className={style.content}>\n        <div className={style.editState}>\n          当前状态：\n          <Dropdown menu={{ items, selectable: true, selectedKeys: [isEdit ? '1' : '2'] }}>\n            <a\n              onClick={e => {\n                e.preventDefault();\n              }}\n            >\n              <Space>\n                {isEdit ? 'Update' : 'Add'}\n                <DownOutlined />\n              </Space>\n            </a>\n          </Dropdown>\n        </div>\n        <div className={style.inputBox}>\n          <Input\n            showCount\n            placeholder=\"Title\"\n            maxLength={50}\n            style={{ fontSize: '2vw' }}\n            value={title}\n            onChange={e => {\n              dispatch(setTitle(e.target.value));\n            }}\n          />\n          <TreeSelect\n            treeIcon\n            placeholder=\"请选择分类\"\n            treeLine={true}\n            treeData={antdMenus}\n            value={menuTitle || undefined}\n            onChange={(key, title) => {\n              dispatch(setMenuId(key));\n              dispatch(setMenuTitle(title[0]));\n            }}\n          />\n        </div>\n        <div className={style.editor}>\n          <MarkdownEditor></MarkdownEditor>\n        </div>\n        <div className={style.submitBtn}>\n          {/* 是否处于编辑状态 */}\n          {isEdit ? (\n            <Button size=\"large\" loading={isLoading} onClick={handleUpdate}>\n              更新\n            </Button>\n          ) : (\n            <Button size=\"large\" loading={isLoading} onClick={handleSubmit}>\n              提交\n            </Button>\n          )}\n          <Button\n            size=\"large\"\n            onClick={() => {\n              setOpen(true);\n            }}\n          >\n            预览\n          </Button>\n        </div>\n      </div>\n      <Drawer\n        destroyOnClose\n        title=\"总览\"\n        placement=\"right\"\n        width={width > 768 ? '50vw' : '75vw'}\n        onClose={() => {\n          setOpen(false);\n        }}\n        open={open}\n      >\n        <ReactMarkdownRender>{content}</ReactMarkdownRender>\n      </Drawer>\n    </div>\n  );\n};\n\nexport default BlogManage;\n"],"names":["code","_ref","node","inline","className","children","props","_objectWithoutProperties","_excluded","themeMode","useAppSelector","state","universal","match","useMemo","exec","message","useGlobalMessage","_useState","useState","nanoid","unique","_slicedToArray","ref","useRef","useEffect","div","document","getElementsByClassName","parent","parentElement","undefined","child","firstElementChild","style","position","color","_jsxs","_Fragment","_jsx","concat","onClick","clipboardObj","navigator","clipboard","value","String","replace","writeText","then","success","error","SyntaxHighlighter","_objectSpread","showLineNumbers","vscDarkPlus","language","_ref2","ReactMarkdown","remarkPlugins","remarkMath","remarkGfm","rehypePlugins","rehypeKatex","rehypeRaw","components","content","blog","writeContent","dispatch","useAppDispatch","textarea","toolbar","classList","add","remove","MDEditor","preview","onChange","setContent","menus","blogMenu","menuList","modal","useGlobalModal","width","useViewport","_useAppSelector","title","menuId","menuTitle","isEdit","curEditId","selectedId","icons","useIcons","antdMenus","getTreeSelectList","_useState2","isLoading","setIsLoading","_useState3","_useState4","open","setOpen","setSelectKey","items","key","label","fontSize","hasBlog","confirm","onOk","setCurEditId","getCurBlog","response","data","belongingMenu","contents","menu","getSideMenuItem","setAllContent","id","filterLT","setIsEdit","err","initWriteContent","handleSubmit","_asyncToGenerator","_regeneratorRuntime","mark","_callee2","wrap","_context2","prev","next","addBlogAjax","_callee","_context","loadingSuccessAsync","newBlog","setSelectedId","addBlogMenu","stop","_x","apply","arguments","handleUpdate","_ref3","_callee4","_context4","updateBlogAjax","blogId","updateAt","Date","now","_callee3","_context3","editBlogMenu","SideMenu","page","Dropdown","selectable","selectedKeys","e","preventDefault","Space","DownOutlined","Input","showCount","placeholder","maxLength","setTitle","target","TreeSelect","treeIcon","treeLine","treeData","setMenuId","setMenuTitle","MarkdownEditor","Button","size","loading","Drawer","destroyOnClose","placement","onClose","ReactMarkdownRender"],"sourceRoot":""}