{"version":3,"file":"static/js/720.8acdc366.chunk.js","mappings":"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","sources":["webpack://front-end/./src/pages/MainPage/BackStage/EditSMTP/index.module.scss?4f06","api/email/index.tsx","pages/MainPage/BackStage/EditSMTP/index.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dark\":\"EditSMTP_dark__x-Ak1\",\"dark-2\":\"EditSMTP_dark-2__oZAdH\",\"dark-3\":\"EditSMTP_dark-3__yr7JS\",\"dark-3-onforce\":\"EditSMTP_dark-3-onforce__9puYy\",\"light\":\"EditSMTP_light__DhWuv\",\"light-1\":\"EditSMTP_light-1__BHH78\",\"dark-font\":\"EditSMTP_dark-font__hrKGB\",\"dark-back-2-onforce-no-trans\":\"EditSMTP_dark-back-2-onforce-no-trans__kNjUy\",\"hoverDark\":\"EditSMTP_hoverDark__8k1ky\",\"hoverLight\":\"EditSMTP_hoverLight__bDEn1\",\"light-font\":\"EditSMTP_light-font__hCReq\",\"mark\":\"EditSMTP_mark__Yx3Rg\",\"transBase\":\"EditSMTP_transBase__xMFvK\",\"transHide\":\"EditSMTP_transHide__TuwM0\",\"showAnime\":\"EditSMTP_showAnime__wRrhb\",\"hideAnime\":\"EditSMTP_hideAnime__m0pme\",\"show-anime-delay-1s\":\"EditSMTP_show-anime-delay-1s__oB6wP\",\"show-anime-no-delay\":\"EditSMTP_show-anime-no-delay__kBkGU\",\"form\":\"EditSMTP_form__yiWcj\"};","import service from '@/utils/request';\nimport { improvedCatchAsync } from '@/api';\nimport { SMTPConfig } from '@/interface/emailApi';\n\nexport const setSMTPConfig = improvedCatchAsync(async (config: SMTPConfig) => {\n  const response = await service.post('/api/email', config);\n  return Promise.resolve(response);\n});\n\nexport const getSMTPConfig = improvedCatchAsync(async () => {\n  const response = await service.get('/api/email');\n  return Promise.resolve(response);\n});\n","import React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router';\n\n// antd\nimport { Button, Form, Input } from 'antd';\n\n// css\nimport style from './index.module.scss';\n\n// api\nimport { SMTPConfig } from '@/interface/emailApi';\nimport { getSMTPConfig, setSMTPConfig } from '@/api/email';\n\n// provider\nimport { useGlobalMessage } from '@/components/ContextProvider/MessageProvider';\n\n// redux\nimport { useAppDispatch } from '@/redux';\nimport { setSelectKey } from '@/redux/slices/backstage';\n\nconst EditOSS = () => {\n  const msg = useGlobalMessage();\n  const navigate = useNavigate();\n  const dispatch = useAppDispatch();\n  const [config, setConfig] = useState<SMTPConfig>();\n  const [loading, setLoading] = useState(true);\n  const [form] = Form.useForm();\n\n  useEffect(() => {\n    dispatch(setSelectKey('smtp'));\n  }, []);\n\n  useEffect(() => {\n    getSMTPConfig(\n      '',\n      res => {\n        setConfig(res.data.smtp);\n      },\n      err => {\n        msg.error(err);\n      }\n    );\n    setTimeout(() => {\n      setLoading(false);\n    }, 50);\n  }, []);\n\n  return (\n    <>\n      {loading ? undefined : (\n        <div className={style.wrapper}>\n          <Form\n            form={form}\n            name=\"wrap\"\n            labelCol={{ flex: '120px' }}\n            labelAlign=\"right\"\n            labelWrap\n            colon={false}\n            className={style.form}\n            initialValues={{\n              email: config?.email,\n              password: config?.password,\n              host: config?.host,\n              port: config?.port,\n            }}\n            onFinish={values => {\n              setSMTPConfig(\n                values,\n                () => {\n                  msg.loadingSuccessAsync('保存中...', '保存成功!');\n                  navigate(0);\n                },\n                err => {\n                  msg.error(err);\n                }\n              );\n            }}\n          >\n            <Form.Item label=\"Email\" name=\"email\" rules={[{ required: true }]}>\n              <Input placeholder=\"设定 Email\" />\n            </Form.Item>\n            <Form.Item label=\"Password\" name=\"password\" rules={[{ required: true }]}>\n              <Input placeholder=\"设定 Password\" type=\"password\" />\n            </Form.Item>\n            <Form.Item label=\"Host\" name=\"host\" rules={[{ required: true }]}>\n              <Input placeholder=\"设定 Host\" />\n            </Form.Item>\n            <Form.Item label=\"Port\" name=\"port\" rules={[{ required: true }]}>\n              <Input placeholder=\"设定 port\" />\n            </Form.Item>\n            <Form.Item label=\" \">\n              <Button type=\"primary\" htmlType=\"submit\">\n                保存\n              </Button>\n              <Button\n                style={{ marginLeft: '20px' }}\n                type=\"primary\"\n                danger\n                onClick={() => {\n                  form.setFieldsValue({\n                    email: '',\n                    password: '',\n                    host: '',\n                    port: '',\n                  });\n                }}\n              >\n                清除\n              </Button>\n            </Form.Item>\n          </Form>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default EditOSS;\n"],"names":["setSMTPConfig","improvedCatchAsync","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","config","response","wrap","_context","prev","next","service","sent","abrupt","Promise","resolve","stop","_x","apply","arguments","getSMTPConfig","_callee2","_context2","msg","useGlobalMessage","navigate","useNavigate","dispatch","useAppDispatch","_useState","useState","_useState2","_slicedToArray","setConfig","_useState3","_useState4","loading","setLoading","_Form$useForm","Form","form","useEffect","setSelectKey","res","data","smtp","err","error","setTimeout","_jsx","_Fragment","children","undefined","className","style","_jsxs","name","labelCol","flex","labelAlign","labelWrap","colon","initialValues","email","password","host","port","onFinish","values","loadingSuccessAsync","label","rules","required","Input","placeholder","type","Button","htmlType","marginLeft","danger","onClick","setFieldsValue"],"sourceRoot":""}