{"version":3,"file":"static/js/1654.bac97979.chunk.js","mappings":"8OAKaA,GAAeC,EAAAA,EAAAA,IAAkBC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAC,SAAAC,IAAA,IAAAC,EAAA,OAAAH,EAAAA,EAAAA,KAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACtBC,EAAAA,EAAAA,IAAY,eAAe,KAAD,EAAnC,OAARL,EAAQE,EAAAI,KAAAJ,EAAAK,OAAA,SACPC,QAAQC,QAAQT,IAAS,wBAAAE,EAAAQ,OAAA,GAAAX,EAAA,MAGrBY,GAAehB,EAAAA,EAAAA,GAAkB,eAAAiB,GAAAhB,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAC,SAAAe,EAAOC,GAAiB,IAAAd,EAAA,OAAAH,EAAAA,EAAAA,KAAAI,MAAA,SAAAc,GAAA,cAAAA,EAAAZ,KAAAY,EAAAX,MAAA,cAAAW,EAAAX,KAAA,EAC9CC,EAAAA,EAAAA,KAAa,wBAAyBS,GAAQ,KAAD,EAAtD,OAARd,EAAQe,EAAAT,KAAAS,EAAAR,OAAA,SACPC,QAAQC,QAAQT,IAAS,wBAAAe,EAAAL,OAAA,GAAAG,EAAA,KACjC,gBAAAG,GAAA,OAAAJ,EAAAK,MAAA,KAAAC,UAAE,CAAF,CAH6C,IAKjCC,GAAexB,EAAAA,EAAAA,IAAkBC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAC,SAAAsB,IAAA,IAAApB,EAAA,OAAAH,EAAAA,EAAAA,KAAAI,MAAA,SAAAoB,GAAA,cAAAA,EAAAlB,KAAAkB,EAAAjB,MAAA,cAAAiB,EAAAjB,KAAA,EACtBC,EAAAA,EAAAA,IAAY,yBAAyB,KAAD,EAA7C,OAARL,EAAQqB,EAAAf,KAAAe,EAAAd,OAAA,SACPC,QAAQC,QAAQT,IAAS,wBAAAqB,EAAAX,OAAA,GAAAU,EAAA,K,yPCZrBE,GAAY3B,EAAAA,EAAAA,GAAkB,eAAA4B,GAAA3B,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAC,SAAAC,EAAOyB,GAAsB,IAAAxB,EAAA,OAAAH,EAAAA,EAAAA,KAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAChDC,EAAAA,EAAAA,KAAa,cAAemB,GAAS,KAAD,EAA7C,OAARxB,EAAQE,EAAAI,KAAAJ,EAAAK,OAAA,SACPC,QAAQC,QAAQT,IAAS,wBAAAE,EAAAQ,OAAA,GAAAX,EAAA,KACjC,gBAAAiB,GAAA,OAAAO,EAAAN,MAAA,KAAAC,UAAE,CAAF,CAH0C,IAK9BO,GAAY9B,EAAAA,EAAAA,GAAkB,eAAAiB,GAAAhB,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAC,SAAAe,EAAOa,GAAqB,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA/B,EAAA,OAAAH,EAAAA,EAAAA,KAAAI,MAAA,SAAAc,GAAA,cAAAA,EAAAZ,KAAAY,EAAAX,MAAA,OAC5B,OAAlCuB,EAAuCD,EAAvCC,KAAMC,EAAiCF,EAAjCE,MAAOC,EAA0BH,EAA1BG,OAAQC,EAAkBJ,EAAlBI,KAAMC,EAAYL,EAAZK,QAAOhB,EAAAX,KAAA,EACnBC,EAAAA,EAAAA,IACrB,uBACGsB,EAAI,QAAAK,OAAWL,EAAI,KAAM,KACzBC,EAAK,SAAAI,OAAYJ,EAAK,KAAM,KAC5BC,EAAM,UAAAG,OAAaH,EAAM,KAAM,KAC/BC,EAAI,QAAAE,OAAWF,EAAI,KAAM,KACzBC,EAAO,GAAAC,OAAMD,GAAY,KAC5B,KAAD,EAPa,OAAR/B,EAAQe,EAAAT,KAAAS,EAAAR,OAAA,SAQPC,QAAQC,QAAQT,IAAS,wBAAAe,EAAAL,OAAA,GAAAG,EAAA,KACjC,gBAAAoB,GAAA,OAAArB,EAAAK,MAAA,KAAAC,UAAE,CAAF,CAX0C,IAa9BgB,GAAgBvC,EAAAA,EAAAA,GAAkB,eAAAwC,GAAAvC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAC,SAAAsB,EAAOM,GAAqB,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA/B,EAAA,OAAAH,EAAAA,EAAAA,KAAAI,MAAA,SAAAoB,GAAA,cAAAA,EAAAlB,KAAAkB,EAAAjB,MAAA,OAChC,OAAlCuB,EAAuCD,EAAvCC,KAAMC,EAAiCF,EAAjCE,MAAOC,EAA0BH,EAA1BG,OAAQC,EAAkBJ,EAAlBI,KAAMC,EAAYL,EAAZK,QAAOV,EAAAjB,KAAA,EACnBC,EAAAA,EAAAA,IACrB,4BACGsB,EAAI,QAAAK,OAAWL,EAAI,KAAM,KACzBC,EAAK,SAAAI,OAAYJ,EAAK,KAAM,KAC5BC,EAAM,UAAAG,OAAaH,EAAM,KAAM,KAC/BC,EAAI,QAAAE,OAAWF,EAAI,KAAM,KACzBC,EAAO,GAAAC,OAAMD,GAAY,KAC5B,KAAD,EAPa,OAAR/B,EAAQqB,EAAAf,KAAAe,EAAAd,OAAA,SAQPC,QAAQC,QAAQT,IAAS,wBAAAqB,EAAAX,OAAA,GAAAU,EAAA,KACjC,gBAAAgB,GAAA,OAAAD,EAAAlB,MAAA,KAAAC,UAAE,CAAF,CAX8C,IAalCmB,GAAY1C,EAAAA,EAAAA,GAAkB,eAAA2C,GAAA1C,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAC,SAAAyC,EAAOC,GAAgB,IAAAxC,EAAA,OAAAH,EAAAA,EAAAA,KAAAI,MAAA,SAAAwC,GAAA,cAAAA,EAAAtC,KAAAsC,EAAArC,MAAA,OACM,OAAjEJ,EAAWK,EAAAA,EAAAA,OAAe,cAAe,CAAEqC,KAAM,CAAEF,SAAAA,KAAaC,EAAAlC,OAAA,SAC/DC,QAAQC,QAAQT,IAAS,wBAAAyC,EAAA/B,OAAA,GAAA6B,EAAA,KACjC,gBAAAI,GAAA,OAAAL,EAAArB,MAAA,KAAAC,UAAE,CAAF,CAH0C,IAK9B0B,GAAUjD,EAAAA,EAAAA,GAAkB,eAAAkD,GAAAjD,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAC,SAAAgD,EAAOC,GAAkB,IAAA/C,EAAA,OAAAH,EAAAA,EAAAA,KAAAI,MAAA,SAAA+C,GAAA,cAAAA,EAAA7C,KAAA6C,EAAA5C,MAAA,OAG9D,OAFGJ,EAAWK,EAAAA,EAAAA,OAAe,0BAA2B,CACzDqC,KAAM,CAAEK,SAAAA,KACRC,EAAAzC,OAAA,SACKC,QAAQC,QAAQT,IAAS,wBAAAgD,EAAAtC,OAAA,GAAAoC,EAAA,KACjC,gBAAAG,GAAA,OAAAJ,EAAA5B,MAAA,KAAAC,UAAE,CAAF,CALwC,IAO5BgC,GAAWvD,EAAAA,EAAAA,GAAkB,eAAAwD,GAAAvD,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAC,SAAAsD,EAAOC,GAAsB,IAAArD,EAAA,OAAAH,EAAAA,EAAAA,KAAAI,MAAA,SAAAqD,GAAA,cAAAA,EAAAnD,KAAAmD,EAAAlD,MAAA,OACc,OAA9EJ,EAAWK,EAAAA,EAAAA,IAAY,qCAAD2B,OAAsCqB,IAAiBC,EAAA/C,OAAA,SAC5EC,QAAQC,QAAQT,IAAS,wBAAAsD,EAAA5C,OAAA,GAAA0C,EAAA,KACjC,gBAAAG,GAAA,OAAAJ,EAAAlC,MAAA,KAAAC,UAAE,CAAF,CAHyC,IAK7BsC,GAAY7D,EAAAA,EAAAA,GAAkB,eAAA8D,GAAA7D,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAC,SAAA4D,EAAOhB,GAAiB,IAAA1C,EAAA,OAAAH,EAAAA,EAAAA,KAAAI,MAAA,SAAA0D,GAAA,cAAAA,EAAAxD,KAAAwD,EAAAvD,MAAA,OACd,OAA9CJ,EAAWK,EAAAA,EAAAA,MAAc,cAAeqC,GAAKiB,EAAApD,OAAA,SAC5CC,QAAQC,QAAQT,IAAS,wBAAA2D,EAAAjD,OAAA,GAAAgD,EAAA,KACjC,gBAAAE,GAAA,OAAAH,EAAAxC,MAAA,KAAAC,UAAE,CAAF,CAH0C,G,uNCpD3C,G,SAA0xB,2BAA1xB,EAAk0B,8BAAl0B,EAA42B,4BAA52B,EAAi5B,yB,wFCUz4B2C,EAAYC,EAAAA,EAAAA,QAsCdC,EAAkB,SAAHxC,GAAiE,IAA3DyC,EAAKzC,EAALyC,MAAOC,EAAQ1C,EAAR0C,SAAUC,EAAM3C,EAAN2C,OAAQC,EAAI5C,EAAJ4C,KAC5CC,GAAUC,EAAAA,EAAAA,KACRC,GAAUC,EAAAA,EAAAA,KAAVD,MACRE,GAA8BC,EAAAA,EAAAA,YAAuBC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA9CI,EAAOF,EAAA,GAAEG,EAAUH,EAAA,GAC1BI,GAAoCL,EAAAA,EAAAA,UAAmB,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAnDE,EAAUD,EAAA,GAAEE,EAAaF,EAAA,GAE1BG,EAAI,eAAAtE,GAAAhB,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,IAAA,OAAAF,EAAAA,EAAAA,KAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,QACXV,EAAAA,EAAAA,IACE,IACA,SAAAgD,GACEmC,EAAWnC,EACb,IACA,SAAAyC,GACEf,EAAQgB,MAAMD,EAChB,IACA,wBAAAjF,EAAAQ,OAAA,GAAAX,EAAA,KACH,kBAVS,OAAAa,EAAAK,MAAA,KAAAC,UAAA,MAYVmE,EAAAA,EAAAA,YAAU,WACRH,GACF,GAAG,IAIH,IAAMI,GAAWC,EAAAA,EAAAA,cAAY,WAC3B,IAAIC,EACJ,OAAO,SAACC,EAAqBvB,EAAgBc,EAAsBb,GAC7DqB,GAAOE,aAAaF,GACxBA,EAAQG,YAAW,WAEjB,IAKMC,GALWH,EAAMI,OACnBJ,EAAMK,QAAO,SAAAC,GACX,OAAQf,EAAWgB,SAASD,EAAKE,IACnC,IACA,IACoBC,KAAI,SAAAH,GAC1B,MAAO,CACLvD,SAAUuD,EAAKE,IACf5C,eAAgBa,EAChBiC,UAAWhC,EAEf,IACIyB,EAAOC,SACTvE,EAAAA,EAAAA,IACEsE,GACA,WACExB,EAAQgC,QAAQ,4BAChBnB,EAAc,GAADjD,QAAAqE,EAAAA,EAAAA,GAAKrB,IAAUqB,EAAAA,EAAAA,GAAMT,EAAOM,KAAI,SAAAI,GAAK,OAAIA,EAAM9D,QAAQ,MACtE,IACA,SAAA2C,GACEf,EAAQgB,MAAM,kHAADpD,OAAyBmD,GACxC,GAEN,GAAG,IACL,CACF,GAAG,IAEGoB,GAAeC,EAAAA,EAAAA,UAAQ,WAC3B,OAAOlB,GACT,GAAG,IAwCGmB,EAAyC,eAAAnE,GAAA1C,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAe,EAAOkF,EAAMhD,GAAQ,IAAA2D,EAAAC,EAAAnE,EAAA,OAAA3C,EAAAA,EAAAA,KAAAI,MAAA,SAAAc,GAAA,cAAAA,EAAAZ,KAAAY,EAAAX,MAAA,UAChEwE,EAAQ,CAAD7D,EAAAX,KAAA,eAAAW,EAAAR,OAAA,UAAS,GAAK,OAEmB,KAAL,IAAzBqG,OAAOhC,EAAQiC,QAEjBC,KAAKC,OAAK,CAAAhG,EAAAX,KAAA,eAAAW,EAAAX,KAAA,EACf8E,IAAO,KAAD,EAUoB,OAN5BwB,IAAUX,EAAKiB,KAAKC,MAAM,WACpB7C,EAAQgB,MAAM,0DACpBuB,EAASZ,EAAKmB,KAAKC,MAAMpB,EAAKmB,KAAKE,YAAY,MAC/C5E,GAAW6E,EAAAA,EAAAA,MAAWV,EAG5BZ,EAAKE,IAAMrB,EAAQ0C,IAAM9E,EAASzB,EAAAR,OAAA,SAC3BmG,GAAS5C,EAAAA,EAAAA,aAAkB,yBAAA/C,EAAAL,OAAA,GAAAG,EAAA,KACnC,gBAlB8CG,EAAAiB,GAAA,OAAAK,EAAArB,MAAA,KAAAC,UAAA,KAqBzCqG,EAAS,eAAA1E,GAAAjD,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAsB,EAAO2E,GAAgB,IAAAyB,EAAAC,EAAAC,EAAA,OAAA7H,EAAAA,EAAAA,KAAAI,MAAA,SAAAoB,GAAA,cAAAA,EAAAlB,KAAAkB,EAAAjB,MAAA,cAAAiB,EAAAjB,KAAA,EACrB,IAAII,SAAQ,SAAAC,GAC5B,IAAMkH,EAAS,IAAIC,WACnBD,EAAOE,cAAc9B,EAAK+B,eAC1BH,EAAOI,OAAS,kBAAMtH,EAAQkH,EAAOK,OAAkB,CACzD,IAAG,KAAD,EAJIR,EAAGnG,EAAAf,MAKHmH,EAAQ,IAAIQ,OACZT,IAAMA,EAEZC,EAAMS,MAAMC,SAAW,WACvBV,EAAMS,MAAME,KAAO,IACnBX,EAAMS,MAAMG,MAAQ,IACpBZ,EAAMS,MAAMI,OAAS,IACrBb,EAAMS,MAAMK,IAAM,IAClBd,EAAMS,MAAMM,OAAS,OAEZ,QADHd,EAAYe,OAAOC,KAAKlB,UACrB,IAATE,GAAAA,EAAWiB,SAASC,MAAMnB,EAAMoB,WAAW,yBAAAxH,EAAAX,OAAA,GAAAU,EAAA,KAC5C,gBAjBcgB,GAAA,OAAAS,EAAA5B,MAAA,KAAAC,UAAA,KAmBT4H,EAA2B,CAC/B5B,KAAM,OACNnE,SAAUiB,EACV+E,OAAe,OAAPnE,QAAO,IAAPA,OAAO,EAAPA,EAASoE,KACjBC,UAAU,EACVhF,SAnF4C,SAAH9B,GAA4B,IAAtB4D,EAAI5D,EAAJ4D,KAAMhD,EAAQZ,EAARY,SACrDqB,EAAQ8E,UAER,IAAMC,EAAUpG,EAAS+C,QAAO,SAAAC,GAC9B,MAAuB,cAAhBA,EAAKqD,MACd,IAEMhD,EAAUrD,EAAS+C,QAAO,SAAAC,GAC9B,MAAuB,SAAhBA,EAAKqD,MACd,IAEMhE,EAAQrC,EAAS+C,QAAO,SAAAC,GAC5B,MAAuB,UAAhBA,EAAKqD,MACd,IACID,EAAQtD,OAAS,GAAGzB,EAAQiF,QAAQ,sBACpCjD,EAAQP,OAAS,GAAqB,YAAhBE,EAAKqD,QAE7B7C,EAAaxD,EAAUmB,EAAQc,EAAYb,GAEzCiB,EAAMS,OAAS,GAAGzB,EAAQgB,MAAM,4BAE5B,OAARnB,QAAQ,IAARA,GAAAA,GAAQoC,EAAAA,EAAAA,GAAOtD,GACjB,EA8DEuG,SA5De,SAACvD,GAChB,IAAMN,GAASzB,GAAS,IAAI8B,QAAO,SAAAyD,GAAC,OAAIA,EAAEtD,MAAQF,EAAKE,GAAG,IACtDhC,GACFA,EAASwB,EAEb,EAwDE8B,UAAAA,EACA7E,KAvDwC,SAAAqD,GAAI,MAAK,CACjDyD,IAAKzD,EAAKE,IACVwD,eAAuB,OAAP7E,QAAO,IAAPA,OAAO,EAAPA,EAAS8E,SACzBC,OAAe,OAAP/E,QAAO,IAAPA,OAAO,EAAPA,EAAS+E,OACjBC,UAAkB,OAAPhF,QAAO,IAAPA,OAAO,EAAPA,EAASiF,UACrB,EAmDCpD,aAAAA,GAGF,OACEqD,EAAAA,EAAAA,MAACjG,GAAOkG,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAKjB,GAAW,IAAEkB,SAAS,UAAUC,OAAQ3F,EAAQ4F,EAAAA,GAAc,IAAM,IAAIC,SAAA,EACnFC,EAAAA,EAAAA,KAAA,KAAGC,UAAU,uBAAsBF,UACjCC,EAAAA,EAAAA,KAACE,EAAAA,EAAa,OAEhBF,EAAAA,EAAAA,KAAA,KAAGC,UAAU,kBAAiBF,SAAC,0FAC/BC,EAAAA,EAAAA,KAAA,KAAGC,UAAU,kBAAiBF,SAAC,kMAGrC,EAyDA,EAvD2B,WACzB,IAAMI,GAAWC,EAAAA,EAAAA,MACjBC,GAAgChG,EAAAA,EAAAA,UAAS,OAAMiG,GAAA/F,EAAAA,EAAAA,GAAA8F,EAAA,GAAxCE,EAAQD,EAAA,GAAEE,EAAWF,EAAA,GAC5BG,GAAwBpG,EAAAA,EAAAA,UAAe,IAAIqC,KAAKA,KAAKC,QAAO+D,GAAAnG,EAAAA,EAAAA,GAAAkG,EAAA,GAArD1G,EAAI2G,EAAA,GAAEC,EAAOD,EAAA,GAcpB,OAHAzF,EAAAA,EAAAA,YAAU,WACRkF,GAASS,EAAAA,EAAAA,GAAa,SACxB,GAAG,KAEDlB,EAAAA,EAAAA,MAAA,OAAKO,UAAWnC,EAAciC,SAAA,EAC5BL,EAAAA,EAAAA,MAAA,OAAKO,UAAWnC,EAAkBiC,SAAA,EAChCC,EAAAA,EAAAA,KAAA,QAAAD,SAAM,kEACNC,EAAAA,EAAAA,KAACa,EAAAA,EAAM,CACLC,aAAa,MACbhD,MAAO,CAAE5D,MAAO,KAChBL,SAlBa,SAACD,GACpB4G,EAAY5G,EACd,EAiBQjC,QAAS,CACP,CAAEiC,MAAO,MAAOmH,MAAO,4BACvB,CAAEnH,MAAO,SAAUmH,MAAO,4BAC1B,CAAEnH,MAAO,WAAYmH,MAAO,sBAC5B,CAAEnH,MAAO,SAAUmH,MAAO,oBAG9BrB,EAAAA,EAAAA,MAAA,QAAAK,SAAA,EACEC,EAAAA,EAAAA,KAACgB,EAAAA,EAAK,CAACC,MAAM,UAAUjC,OAAO,aAAalB,MAAO,CAAEoD,aAAc,KAAa,wFAInFxB,EAAAA,EAAAA,MAAA,OAAKO,UAAWnC,EAAgBiC,SAAA,EAC9BC,EAAAA,EAAAA,KAAA,QAAAD,SAAM,kEACNC,EAAAA,EAAAA,KAACmB,EAAAA,EAAU,CAACC,YAAY,6CAAUC,OAnCrB,aAmCyCxH,SA7BzC,SAACD,GAClB+G,EAAQ/G,EAAM0H,GAChB,KA4BM5B,EAAAA,EAAAA,MAAA,QAAAK,SAAA,EACEC,EAAAA,EAAAA,KAACgB,EAAAA,EAAK,CAACC,MAAM,UAAUjC,OAAO,aAAalB,MAAO,CAAEoD,aAAc,KAAa,sHAInFlB,EAAAA,EAAAA,KAAA,OAAKC,UAAWnC,EAAaiC,UAC3BC,EAAAA,EAAAA,KAACuB,EAAAA,EAAI,CAACC,SAAU,CAAEC,KAAM,GAAI1B,UAC1BC,EAAAA,EAAAA,KAACuB,EAAAA,EAAAA,KAAS,CAACzE,KAAK,SAAQiD,UACtBC,EAAAA,EAAAA,KAACrG,EAAe,CAACG,OAAQyG,EAAUxG,KAAMA,YAMrD,C","sources":["api/OSS/index.tsx","api/images/index.ts","webpack://front-end/./src/pages/MainPage/BackStage/AddPhoto/index.module.scss?14cf","pages/MainPage/BackStage/AddPhoto/index.tsx"],"sourcesContent":["import service from '@/utils/request';\nimport { improvedCatchAsync } from '@/api';\nimport { OSSConfig } from '@/interface/OSSApi';\n\n//GetAliOSS Policy-Token\nexport const getOSSPolicy = improvedCatchAsync(async () => {\n  const response = await service.get('/api/policy');\n  return Promise.resolve(response);\n});\n\nexport const setOSSObject = improvedCatchAsync(async (config: OSSConfig) => {\n  const response = await service.post('/api/policy/setConfig', config);\n  return Promise.resolve(response);\n});\n\nexport const getOSSObject = improvedCatchAsync(async () => {\n  const response = await service.get('/api/policy/getConfig');\n  return Promise.resolve(response);\n});\n","import { improvedCatchAsync } from '@/api';\nimport service from '@/utils/request';\nimport { AddImageObj, updateImage } from '@/interface/imagesApi';\nimport { ApiFeatures } from '@/interface/apiFeatures';\n\nexport const addPhotos = improvedCatchAsync(async (imgList: AddImageObj[]) => {\n  const response = await service.post('/api/images', imgList);\n  return Promise.resolve(response);\n});\n\nexport const getPhotos = improvedCatchAsync(async (features: ApiFeatures) => {\n  const { page, limit, fields, sort, options } = features;\n  const response = await service.get(\n    '/api/images/photos?' +\n      (page ? `page=${page}&` : '') +\n      (limit ? `limit=${limit}&` : '') +\n      (fields ? `fields=${fields}&` : '') +\n      (sort ? `sort=${sort}&` : '') +\n      (options ? `${options}` : '')\n  );\n  return Promise.resolve(response);\n});\n\nexport const getSelfPhotos = improvedCatchAsync(async (features: ApiFeatures) => {\n  const { page, limit, fields, sort, options } = features;\n  const response = await service.get(\n    '/api/images/self/photos?' +\n      (page ? `page=${page}&` : '') +\n      (limit ? `limit=${limit}&` : '') +\n      (fields ? `fields=${fields}&` : '') +\n      (sort ? `sort=${sort}&` : '') +\n      (options ? `${options}` : '')\n  );\n  return Promise.resolve(response);\n});\n\nexport const delSingle = improvedCatchAsync(async (filename: string) => {\n  const response = service.delete('/api/images', { data: { filename } });\n  return Promise.resolve(response);\n});\n\nexport const delMany = improvedCatchAsync(async (fileList: string[]) => {\n  const response = service.delete('/api/images/delete/many', {\n    data: { fileList },\n  });\n  return Promise.resolve(response);\n});\n\nexport const getCount = improvedCatchAsync(async (classification: string) => {\n  const response = service.get(`/api/images/counts?classification=${classification}`);\n  return Promise.resolve(response);\n});\n\nexport const updateImg = improvedCatchAsync(async (data: updateImage) => {\n  const response = service.patch('/api/images', data);\n  return Promise.resolve(response);\n});\n","// extracted by mini-css-extract-plugin\nexport default {\"dark\":\"AddPhoto_dark__zbzXd\",\"dark-2\":\"AddPhoto_dark-2__DkhKZ\",\"dark-3\":\"AddPhoto_dark-3__Fzinw\",\"dark-3-onforce\":\"AddPhoto_dark-3-onforce__-oL6R\",\"light\":\"AddPhoto_light__rmR8n\",\"light-1\":\"AddPhoto_light-1__VWET+\",\"dark-font\":\"AddPhoto_dark-font__fblgk\",\"dark-back-2-onforce-no-trans\":\"AddPhoto_dark-back-2-onforce-no-trans__NveXg\",\"hoverDark\":\"AddPhoto_hoverDark__FwsmV\",\"hoverLight\":\"AddPhoto_hoverLight__DyTPz\",\"light-font\":\"AddPhoto_light-font__bX6g0\",\"mark\":\"AddPhoto_mark__vLuBs\",\"transBase\":\"AddPhoto_transBase__q0WJP\",\"transHide\":\"AddPhoto_transHide__UpAzs\",\"showAnime\":\"AddPhoto_showAnime__pMyGd\",\"hideAnime\":\"AddPhoto_hideAnime__CiQ4H\",\"show-anime-delay-1s\":\"AddPhoto_show-anime-delay-1s__J+Og1\",\"show-anime-no-delay\":\"AddPhoto_show-anime-no-delay__5jUqw\",\"wrapper\":\"AddPhoto_wrapper__e9lIg\",\"classSelect\":\"AddPhoto_classSelect__SDwez\",\"photoTime\":\"AddPhoto_photoTime__jWLWV\",\"upload\":\"AddPhoto_upload__Qh+Q9\"};","import React, { useCallback, useEffect, useState, useMemo } from 'react';\nimport { nanoid } from 'nanoid';\n\n// antd\nimport { Form, Upload, Select, DatePicker, Badge } from 'antd';\nimport { InboxOutlined } from '@ant-design/icons';\nimport { RcFile } from 'antd/lib/upload';\nimport type { UploadFile } from 'antd/es/upload/interface';\nimport type { UploadProps } from 'antd';\nimport 'dayjs/locale/zh-cn';\n\nconst { Dragger } = Upload;\n\n// css\nimport style from './index.module.scss';\n\n// context\nimport { useGlobalMessage } from '@/components/ContextProvider/MessageProvider';\n\n// redux\nimport { useAppDispatch } from '@/redux';\n\n// api\nimport { getOSSPolicy } from '@/api/OSS';\nimport { addPhotos } from '@/api/images';\n\n// provider\nimport { useViewport } from '@/components/ContextProvider/ViewportProvider';\n\n// global\nimport { BREAK_POINT } from '@/global';\nimport { setSelectKey } from '@/redux/slices/backstage';\n\ninterface OSSDataType {\n  dir: string;\n  expire: string;\n  host: string;\n  accessid: string;\n  policy: string;\n  signature: string;\n}\n\ninterface AliyunOSSUploadProps {\n  value?: UploadFile[];\n  onChange?: (fileList: UploadFile[]) => void;\n  select: string;\n  time: Date;\n}\n\nconst AliyunOSSUpload = ({ value, onChange, select, time }: AliyunOSSUploadProps) => {\n  const message = useGlobalMessage();\n  const { width } = useViewport();\n  const [OSSData, setOSSData] = useState<OSSDataType>();\n  const [uploadList, setUploadList] = useState<string[]>([]);\n\n  const init = async () => {\n    getOSSPolicy(\n      '',\n      data => {\n        setOSSData(data);\n      },\n      content => {\n        message.error(content);\n      }\n    );\n  };\n\n  useEffect(() => {\n    init();\n  }, []);\n\n  // 这里当OSS上传后进行应用服务器上传\n  // 需要用防抖技术，否则会多次重复上传\n  const debounce = useCallback(() => {\n    let timer: any;\n    return (files: UploadFile[], select: string, uploadList: string[], time: Date) => {\n      if (timer) clearTimeout(timer);\n      timer = setTimeout(() => {\n        // 过滤已经上传的\n        const fileList = files.length\n          ? files.filter(file => {\n              return !uploadList.includes(file.url as string);\n            })\n          : [];\n        const photos = fileList.map(file => {\n          return {\n            filename: file.url,\n            classification: select,\n            photoTime: time,\n          };\n        });\n        if (photos.length)\n          addPhotos(\n            photos,\n            () => {\n              message.success('上传成功');\n              setUploadList([...uploadList, ...(photos.map(photo => photo.filename) as string[])]);\n            },\n            content => {\n              message.error(`上传至OSS成功但是上传至应用服务器失败：${content}`);\n            }\n          );\n      }, 300);\n    };\n  }, []);\n\n  const debounceFunc = useMemo(() => {\n    return debounce();\n  }, []);\n\n  const handleChange: UploadProps['onChange'] = ({ file, fileList }) => {\n    message.destroy();\n    // 上传msg\n    const uploads = fileList.filter(file => {\n      return file.status === 'uploading';\n    });\n    // 成功msg\n    const success = fileList.filter(file => {\n      return file.status === 'done';\n    });\n    // 失败msg\n    const error = fileList.filter(file => {\n      return file.status === 'error';\n    });\n    if (uploads.length > 0) message.loading('上传中');\n    if (success.length > 0 && file.status !== 'removed') {\n      // 应用服务器上传\n      debounceFunc(fileList, select, uploadList, time);\n    }\n    if (error.length > 0) message.error('上传失败');\n    // 修改状态列表\n    onChange?.([...fileList]);\n  };\n\n  const onRemove = (file: UploadFile) => {\n    const files = (value || []).filter(v => v.url !== file.url);\n    if (onChange) {\n      onChange(files);\n    }\n  };\n\n  const getExtraData: UploadProps['data'] = file => ({\n    key: file.url,\n    OSSAccessKeyId: OSSData?.accessid,\n    policy: OSSData?.policy,\n    Signature: OSSData?.signature,\n  });\n\n  const beforeUpload: UploadProps['beforeUpload'] = async (file, fileList) => {\n    if (!OSSData) return false;\n\n    const expire = Number(OSSData.expire) * 1000;\n\n    if (expire < Date.now()) {\n      await init();\n    }\n\n    // 判断是否是图像\n    const isImg = !!file.type.match('image');\n    if (!isImg) message.error('请上传图片类文件！');\n    const suffix = file.name.slice(file.name.lastIndexOf('.'));\n    const filename = nanoid() + suffix;\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    file.url = OSSData.dir + filename;\n    return isImg || Upload.LIST_IGNORE;\n  };\n\n  // 预览\n  const onPreview = async (file: UploadFile) => {\n    const src = await new Promise(resolve => {\n      const reader = new FileReader();\n      reader.readAsDataURL(file.originFileObj as RcFile);\n      reader.onload = () => resolve(reader.result as string);\n    });\n    const image = new Image();\n    image.src = src as string;\n    // 居中\n    image.style.position = 'absolute';\n    image.style.left = '0';\n    image.style.right = '0';\n    image.style.bottom = '0';\n    image.style.top = '0';\n    image.style.margin = 'auto';\n    const imgWindow = window.open(src as string);\n    imgWindow?.document.write(image.outerHTML);\n  };\n\n  const uploadProps: UploadProps = {\n    name: 'file',\n    fileList: value,\n    action: OSSData?.host,\n    multiple: true,\n    onChange: handleChange,\n    onRemove,\n    onPreview,\n    data: getExtraData,\n    beforeUpload,\n  };\n\n  return (\n    <Dragger {...uploadProps} listType=\"picture\" height={width > BREAK_POINT ? 300 : 200}>\n      <p className=\"ant-upload-drag-icon\">\n        <InboxOutlined />\n      </p>\n      <p className=\"ant-upload-text\">点击或者拖拽文件到此区域上传</p>\n      <p className=\"ant-upload-hint\">支持单个或批量上传。支持所有的图片格式格式，请勿上传其他文件！</p>\n    </Dragger>\n  );\n};\n\nconst AddPhoto: React.FC = () => {\n  const dispatch = useAppDispatch();\n  const [selValue, setSelValue] = useState('now');\n  const [time, setTime] = useState<Date>(new Date(Date.now()));\n  const dateFormat = 'YYYY/MM/DD';\n\n  const handleChange = (value: string) => {\n    setSelValue(value);\n  };\n\n  const handleTime = (value: any) => {\n    setTime(value.$d);\n  };\n\n  useEffect(() => {\n    dispatch(setSelectKey('photo'));\n  }, []);\n  return (\n    <div className={style.wrapper}>\n      <div className={style.classSelect}>\n        <span>请选择上传照片分类：</span>\n        <Select\n          defaultValue=\"now\"\n          style={{ width: 160 }}\n          onChange={handleChange}\n          options={[\n            { value: 'now', label: '即时上传' },\n            { value: 'memory', label: '往事回忆' },\n            { value: 'bigEvent', label: '大事记' },\n            { value: 'others', label: '其他' },\n          ]}\n        />\n        <span>\n          <Badge color=\"magenta\" status=\"processing\" style={{ paddingRight: 5 }}></Badge>\n          用于前端不同照片展示区分类\n        </span>\n      </div>\n      <div className={style.photoTime}>\n        <span>请选择上传照片日期：</span>\n        <DatePicker placeholder=\"请选择照片日期\" format={dateFormat} onChange={handleTime} />\n        <span>\n          <Badge color=\"magenta\" status=\"processing\" style={{ paddingRight: 5 }}></Badge>\n          用于时间轴展示（不填默认为当前时间）\n        </span>\n      </div>\n      <div className={style.upload}>\n        <Form labelCol={{ span: 4 }}>\n          <Form.Item name=\"photos\">\n            <AliyunOSSUpload select={selValue} time={time} />\n          </Form.Item>\n        </Form>\n      </div>\n    </div>\n  );\n};\nexport default AddPhoto;\n"],"names":["getOSSPolicy","improvedCatchAsync","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","wrap","_context","prev","next","service","sent","abrupt","Promise","resolve","stop","setOSSObject","_ref2","_callee2","config","_context2","_x","apply","arguments","getOSSObject","_callee3","_context3","addPhotos","_ref","imgList","getPhotos","features","page","limit","fields","sort","options","concat","_x2","getSelfPhotos","_ref3","_x3","delSingle","_ref4","_callee4","filename","_context4","data","_x4","delMany","_ref5","_callee5","fileList","_context5","_x5","getCount","_ref6","_callee6","classification","_context6","_x6","updateImg","_ref7","_callee7","_context7","_x7","Dragger","Upload","AliyunOSSUpload","value","onChange","select","time","message","useGlobalMessage","width","useViewport","_useState","useState","_useState2","_slicedToArray","OSSData","setOSSData","_useState3","_useState4","uploadList","setUploadList","init","content","error","useEffect","debounce","useCallback","timer","files","clearTimeout","setTimeout","photos","length","filter","file","includes","url","map","photoTime","success","_toConsumableArray","photo","debounceFunc","useMemo","beforeUpload","isImg","suffix","Number","expire","Date","now","type","match","name","slice","lastIndexOf","nanoid","dir","onPreview","src","image","imgWindow","reader","FileReader","readAsDataURL","originFileObj","onload","result","Image","style","position","left","right","bottom","top","margin","window","open","document","write","outerHTML","uploadProps","action","host","multiple","destroy","uploads","status","loading","onRemove","v","key","OSSAccessKeyId","accessid","policy","Signature","signature","_jsxs","_objectSpread","listType","height","BREAK_POINT","children","_jsx","className","InboxOutlined","dispatch","useAppDispatch","_useState5","_useState6","selValue","setSelValue","_useState7","_useState8","setTime","setSelectKey","Select","defaultValue","label","Badge","color","paddingRight","DatePicker","placeholder","format","$d","Form","labelCol","span"],"sourceRoot":""}